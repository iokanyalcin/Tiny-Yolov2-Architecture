# -*- coding: utf-8 -*-
"""Tiny-Yolov2-Architecuture-Tensorflow.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14Vmo5IjpqAhm5qBc2T9_YW0auGzyCN-B
"""

import tensorflow as tf

box = 5
orig_class =20
threshold = 0.2

ANCHORS = '1.08,1.19,  3.42,4.41,  6.63,11.38,  9.42,5.11,  16.62,10.52'
ANCHORS = [float(ANCHORS.strip()) for ANCHORS in ANCHORS.split(',')]
SCALE_NOOB, SCALE_CONF, SCALE_COOR, SCALE_PROB = 0.5, 5.0, 5.0, 1.0
NORM_H, NORM_W = 416, 416
GRID_H, GRID_W = 13 , 13

#build the model 
model = tf.keras.models.Sequential([
                            #Layer1
                            tf.keras.layers.Conv2D(16,(3,3),padding="same",use_bias=False,input_shape = (416,416,3)),
                            tf.keras.layers.BatchNormalization(),
                            tf.keras.layers.LeakyReLU(alpha=0.1),
                            tf.keras.layers.MaxPooling2D(2,2),

                            #Layer2
                            tf.keras.layers.Conv2D(32,(3,3),padding='same',use_bias=False),
                            tf.keras.layers.BatchNormalization(),
                            tf.keras.layers.LeakyReLU(alpha=0.1),
                            tf.keras.layers.MaxPooling2D(2,2),

                            #Layer3
                            tf.keras.layers.Conv2D(64,(3,3),padding='same',use_bias=False),
                            tf.keras.layers.BatchNormalization(),
                            tf.keras.layers.LeakyReLU(alpha = 0.1),
                            tf.keras.layers.MaxPooling2D(2,2),

                            #Layer4
                            tf.keras.layers.Conv2D(128,(3,3),padding='same',use_bias=False),
                            tf.keras.layers.BatchNormalization(),
                            tf.keras.layers.LeakyReLU(alpha=0.1),
                            tf.keras.layers.MaxPooling2D(2,2),

                            #Layer5
                            tf.keras.layers.Conv2D(256,(3,3),padding="same",use_bias=False),
                            tf.keras.layers.BatchNormalization(),
                            tf.keras.layers.LeakyReLU(alpha=0.1),
                            tf.keras.layers.MaxPooling2D(2,2),

                            #Layer6
                            tf.keras.layers.Conv2D(512,(3,3),padding="same",use_bias=False),
                            tf.keras.layers.BatchNormalization(),
                            tf.keras.layers.LeakyReLU(alpha=0.1),
                            tf.keras.layers.MaxPooling2D((2,2),strides=(1,1),padding='same'),

                            #Layer7
                            tf.keras.layers.Conv2D(1024,(3,3),strides=(1,1),padding="same",use_bias=False),
                            tf.keras.layers.BatchNormalization(),
                            tf.keras.layers.LeakyReLU(alpha=0.1),

                            #Layer8
                            tf.keras.layers.Conv2D(1024,(3,3),strides=(1,1),padding="same",use_bias=False),
                            tf.keras.layers.BatchNormalization(),
                            tf.keras.layers.LeakyReLU(alpha=0.1),

                            #Layer9
                            tf.keras.layers.Conv2D(box*(4+1+orig_class),(1,1),kernel_initializer="he_normal" ,activation=tf.keras.activations.linear),
                            tf.keras.layers.Reshape((GRID_H,GRID_W,box,4+1+orig_class))



])

model.summary()

!wget --no-check-certificate \
    https://pjreddie.com/media/files/yolov2-tiny-voc.weights \
    -O /tmp/yolov2-tiny-voc.weights

model.load_weights("/tmp/tiny-yolo-voc.h5")

